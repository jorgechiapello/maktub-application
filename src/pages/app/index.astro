---
import MainLayout from '@layouts/AppMainLayout.astro';
import CrushCard from '@components/CrushCard.astro';
import LoveLoadingAnimation from '@components/LoveLoadingAnimation.astro';
import { crushes } from '../../data/crushes.ts';
---

<MainLayout title="Encuentra tu Crush">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center mb-3">
      <h1 class="text-4xl font-bold text-gray-900 mb-4">Encuentra tu Crush</h1>
    </div>

    <!-- Loading spinner initially visible -->
    <div id="loadingContainer" class="py-1">
      <LoveLoadingAnimation message="Encontrando tus matches perfectos..." />
    </div>

    <!-- Crushes grid initially hidden -->
    <div id="crushesGrid" class="grid md:grid-cols-2 lg:grid-cols-3 gap-6 hidden">
      {crushes.map((match) => (
        <div class="crush-card" data-gender={match.gender}>
          <CrushCard match={match} isPremium={false} />
        </div>
      ))}
    </div>
  </div>
</MainLayout>

<script>
  document.addEventListener('astro:page-load', () => {
    const profileAnswers = localStorage.getItem('profileAnswers');
    if (!profileAnswers) {
      window.location.href = '/app/onboarding';
      return;
    }

    function filterCrushesByPreference() {
      const loadingContainer = document.getElementById('loadingContainer');
      const crushesGrid = document.getElementById('crushesGrid');
      const crushCards = document.querySelectorAll('.crush-card');
      
      // If the page is already loaded (coming back via view transitions)
      // immediately hide loading and show content
      if (document.documentElement.hasAttribute('data-astro-transition')) {
        if (loadingContainer) loadingContainer.classList.add('hidden');
        if (crushesGrid) crushesGrid.classList.remove('hidden');
      }
      
      try {
        const preferenceAnswers = JSON.parse(localStorage.getItem('preferenceAnswers') || '{}');
        const genderPreference = preferenceAnswers.gender || 'Ambos';
        
        crushCards.forEach(card => {
          const gender = card.getAttribute('data-gender');
          
          if (genderPreference === 'Ambos' || 
              (genderPreference === 'Hombres' && gender === 'male') ||
              (genderPreference === 'Mujeres' && gender === 'female')) {
            card.classList.remove('hidden');
          } else {
            card.classList.add('hidden');
          }
        });
        
        // Only use setTimeout for initial page load, not for transitions
        if (!document.documentElement.hasAttribute('data-astro-transition')) {
          setTimeout(() => {
            if (loadingContainer) loadingContainer.classList.add('hidden');
            if (crushesGrid) crushesGrid.classList.remove('hidden');
          }, 1000);
        }
        
      } catch (error) {
        console.error('Error filtering crushes:', error);
        if (loadingContainer) loadingContainer.classList.add('hidden');
        if (crushesGrid) crushesGrid.classList.remove('hidden');
      }
    }
    
    filterCrushesByPreference();
  });
</script>
